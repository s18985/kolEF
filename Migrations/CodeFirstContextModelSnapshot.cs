// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kolEF.Models;

namespace kolEF.Migrations
{
    [DbContext(typeof(CodeFirstContext))]
    partial class CodeFirstContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kolEF.Models.Klientt", b =>
                {
                    b.Property<int>("IdKlientt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdKlientt")
                        .HasName("Klientt_PK");

                    b.ToTable("Klientt");
                });

            modelBuilder.Entity("kolEF.Models.Pracownikk", b =>
                {
                    b.Property<int>("IdPracownikk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdPracownikk")
                        .HasName("Pracownikk_PK");

                    b.ToTable("Pracownikk");
                });

            modelBuilder.Entity("kolEF.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobuCukierniczego")
                        .HasName("WyrobCukierniczy_PK");

                    b.ToTable("WyrobCukierniczy");
                });

            modelBuilder.Entity("kolEF.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlientt")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownikk")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia")
                        .HasName("Zamowienie_PK");

                    b.HasIndex("IdKlientt");

                    b.HasIndex("IdPracownikk");

                    b.ToTable("Zamowienie");
                });

            modelBuilder.Entity("kolEF.Models.ZamowienieWyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .HasColumnType("int");

                    b.Property<int>("IdZamowienia")
                        .HasColumnType("int");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdWyrobuCukierniczego", "IdZamowienia")
                        .HasName("Zamowienie_WyrobCukierniczy_PK");

                    b.HasIndex("IdZamowienia");

                    b.ToTable("Zamowienie_WyrobCukierniczy");
                });

            modelBuilder.Entity("kolEF.Models.Zamowienie", b =>
                {
                    b.HasOne("kolEF.Models.Klientt", "Klientt")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlientt")
                        .HasConstraintName("Zamowienie_Klientt")
                        .IsRequired();

                    b.HasOne("kolEF.Models.Pracownikk", "Pracownikk")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdPracownikk")
                        .HasConstraintName("Zamowienie_Pracownikk")
                        .IsRequired();
                });

            modelBuilder.Entity("kolEF.Models.ZamowienieWyrobCukierniczy", b =>
                {
                    b.HasOne("kolEF.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany("ZamowienieWyrobCukierniczy")
                        .HasForeignKey("IdWyrobuCukierniczego")
                        .HasConstraintName("Zamowienie_WyrobCukierniczy_WyrobCukierniczy")
                        .IsRequired();

                    b.HasOne("kolEF.Models.Zamowienie", "Zamowienie")
                        .WithMany("ZamowienieWyrobCukierniczy")
                        .HasForeignKey("IdZamowienia")
                        .HasConstraintName("Zamowienie_WyrobCukierniczy_Zamowienie")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
